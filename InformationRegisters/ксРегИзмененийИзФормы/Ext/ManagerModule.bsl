
Функция ПолучитьМассивРеквизитовДляХЭШ(ВидИсточник) 
	
	МАс = новый Массив;
	Если нрег(ВидИсточник)=нрег("СтатьиДвиженияДенежныхСредств") Тогда
		мас.Добавить("Код");
		мас.Добавить("Наименование");
		мас.Добавить("Родитель");
		мас.Добавить("ВидДвиженияДенежныхСредств");
		мас.Добавить("ПометкаУдаления");
		
	ИНачеЕсли нрег(ВидИсточник)=нрег("ВнутреннееПотреблениеТоваров") Тогда
		мас.Добавить("Склад");
		мас.Добавить("Подразделение");
		мас.Добавить("Организация");
		мас.Добавить("Комментарий");
		
	ИНаче
		Возврат Неопределено;
	КонецЕСЛИ;  
	
	Рез = Новый МАссив;
	ДЛя каждого эл из МАс Цикл
		Рез.Добавить(нрег(эл));
	КонецЦикла;
	
	Возврат Рез;
	
КонецФункции  

Функция ПолучитьСтрРеквизитовТабЧастиДляХЭШ(ВидИсточник,ТекМетаданные) 
	
	
	метаТаб = новый Структура;
	Если нрег(ВидИсточник)=нрег("ВнутреннееПотреблениеТоваров") Тогда
		пСтр = "Номенклатура,Количество,ФизическоеЛицо,КатегорияЭксплуатации";
		метаТаб.Вставить("Товары",пСтр);	
	ИНаче
		Для каждого мтТаб из  ТекМетаданные[ВидИсточник].ТабличныеЧасти Цикл 
			метаТаб.Вставить(мтТАб.имя,Неопределено);	
		конецЦикла;
		
	КонецЕСЛИ; 
	
	Возврат метаТаб;
	
КонецФункции

Процедура ДобавитьДекорациюФОрмы(Форма) Экспорт
	
	Если Найти(Форма.ИмяФормы,"ФормаДокумента")=0 Тогда Возврат; КонецЕСЛИ;

	
	Лог = ПолучитьЛог(Форма.Объект.ссылка);
	Если Лог="" Тогда Возврат; КонецЕСЛИ;
	
	Элементы = Форма.Элементы;
	Эл = Элементы.Найти("ксНадписьЛогИзм");
	Если Эл = Неопределено Тогда  
		если Элементы.Найти("комментарий")<>Неопределено тогда
			
			ЭЛ = Элементы.Добавить("ксНадписьЛогИзм",Тип("ДекорацияФормы"),Элементы.комментарий.РОдитель);//,Элементы.ГруппаНомерДата);
			Эл.Вид = ВидДекорацииФормы.Надпись;  
			Эл.Заголовок  = "Посл. изменение: "+Лог;
			Эл.ЦветТекста = WebЦвета.Синий; 
			Эл.Видимость = Истина;
			
			
		КонецеСЛИ;
	КонецеСЛИ;
	
	
	
КонецПроцедуры  

Функция ПолучитьЛог(сс,ВСтк=Ложь) Экспорт
	Если ЗначениеЗаполнено(сс)=Ложь Тогда Возврат ""; КонецЕСЛИ;
	
	УстановитьПривилегированныйРежим(Истина);
	
	Запрос = Новый Запрос;
	Запрос.Текст = "ВЫБРАТЬ
	               |	ксРегИзмененийИзФормы.Лог КАК Лог,
	               |	ксРегИзмененийИзФормы.хэш КАК хэш
	               |ИЗ
	               |	РегистрСведений.ксРегИзмененийИзФормы КАК ксРегИзмененийИзФормы
	               |ГДЕ
	               |	ксРегИзмененийИзФормы.идДок = &идДок";
	Запрос.УстановитьПараметр("идДок",сс.УникальныйИдентификатор());
	Выб = Запрос.Выполнить().Выбрать();
	Если Выб.Следующий() Тогда 
		Если ВСтк=истина Тогда
		    Возврат	Новый Структура("Лог,хэш",выб.лог,выб.хэш);
		ИНАче
			Возврат Выб.лог;
		КонецеСЛИ;
	КонецЕсЛИ;
	
	Возврат "";
	
	
КонецФункции   

Процедура ЗаписатьЛог(сс,лог=Неопределено) Экспорт
	УстановитьПривилегированныйРежим(Истина);  
	
	Если ЗначениеЗаполнено(сс)=Ложь Тогда Возврат; КонецЕСЛИ;
	текХЭШ = ХЭШ(сс);
	Если текХЭШ=Неопределено Тогда Возврат; КонецЕСЛИ;
	
	Если лог = Неопределено Тогда
		лог = ""+ТекущаяДата()+" "+ИмяПользователя(); 
	КонецЕсли;
	
	ид = сс.УникальныйИдентификатор();
	
	
	Зап = РегистрыСведений.ксРегИзмененийИзФормы.СоздатьМенеджерЗаписи();
	Зап.идДок = ид;
	Зап.лог = лог; 
	зап.хэш = текХЭШ;  
	Зап.ПредставлениеОбъекта = сокрлп(сс);
	Зап.Записать();
	
КонецПроцедуры  

Процедура ЗаписатьЛогЗагрузкиИзДругойБазы(сс,ид,текХЭШ,лог) Экспорт
	УстановитьПривилегированныйРежим(Истина);  
	
	Если ЗначениеЗаполнено(ид)=Ложь Тогда Возврат; КонецЕСЛИ;
	
	
	Зап = РегистрыСведений.ксРегИзмененийИзФормы.СоздатьМенеджерЗаписи();
	Зап.идДок = ид;
	Зап.лог = лог; 
	зап.хэш = текХЭШ;  
	Зап.ПредставлениеОбъекта = сокрлп(сс);
	Зап.Записать();
	
КонецПроцедуры  

Функция ХЭШ(сс) 
	
	тип     = СтрЗаменить(XMLТипЗнч(сс).ИмяТипа,".",Символы.ПС); 
	ВидМета = СтрПОлучитьСтроку(тип,1);
	тип     = СтрПОлучитьСтроку(тип,2);
	
	СткПар = ПолучитьПарОбк(ВидМета,тип); 
	Если сткПар = Неопределено Тогда Возврат Неопределено; КонецеСли;
		
		
	рез = Новый МАссив;
	
	Для каждого эл из СткПар.метаРек Цикл  
		рез.Добавить(сс[эл]);
	КонецЦикла;  
	
	ДЛя каждого элТаб из СткПар.метаТаб Цикл
		Рез.добавить(сс[элТаб.ключ].выгрузить(,элТаб.Значение));
	КонецЦикла;  
	
	хз = Новый ХранилищеЗначения(Рез); 
	

	хэш = Новый ХешированиеДанных(ХешФункция.CRC32);
	хэш.Добавить(xmlСтрока(хз));
	
	Возврат хэш.ХешСумма;
	
КонецФункции

Функция ПолучитьПарОбк(ВидМета,ВидИсточник) экспорт
	
	Если  ВидМета = "DocumentRef" Тогда
		ТекМетаданные = Метаданные.Документы;
	ИНачеЕсли  ВидМета = "CatalogRef" Тогда
		ТекМетаданные = Метаданные.Справочники;
	ИНаче
		Возврат Неопределено;		
	КонецесЛИ;
		
	
	
	
	парОбк = Новый Структура;  
	масРек = ПолучитьМассивРеквизитовДляХЭШ(ВидИсточник);  
	Если масРек = Неопределено Тогда Возврат Неопределено; КонецеСлИ;
	
	//метаРек=новый массив;
	//Для каждого эл из ТекМетаданные[ВидИсточник].Реквизиты Цикл
	//	Если масРек<>Неопределено и масРек.Найти(нрег(эл.имя))=Неопределено Тогда Продолжить; КонецеслИ;
	//	метаРек.Добавить(эл.имя);
	//КонецЦикла;  
	метаРек = масРек;
	
	
	парОбк.вставить("метаРек",метаРек);
	
	парОбк.вставить("метаТаб",ПолучитьСтрРеквизитовТабЧастиДляХЭШ(ВидИсточник,ТекМетаданные));
	
	Возврат парОбк;

	
КонецФункции


Функция ПолучитьТБлХЭШ(ТипМетаданных,ВидДокПрм) Экспорт
	
	Запрос = Новый ЗАпрос;
	Запрос.Текст = 	"
	|ВЫБРАТЬ
	|	ксРегИзмененийИзФормы.идДок КАК идДок,
	|	ксРегИзмененийИзФормы.хэш КАК хэш
	|ИЗ
	|	РегистрСведений.ксРегИзмененийИзФормы КАК ксРегИзмененийИзФормы
	|INNER JOIN ТипМетаданных.НашДОК Док ON УникальныйИдентификатор(ДОк.ссылка) = ксРегИзмененийИзФормы.идДок
	//|                                             и Док.Дата >= &Дт1
	//|                                             и Док.Дата <  &Дт2
	//|                                             и Док.Организация = &Орг
	|";  
	
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"НашДОК",ВидДокПрм);
	Запрос.Текст = СтрЗаменить(Запрос.Текст,"ТипМетаданных",ТипМетаданных);
	
	//Запрос.УстановитьПараметр("Орг",Организация);
	//Запрос.УстановитьПараметр("Дт1",НачалоДня(Дт));
	//Запрос.УстановитьПараметр("Дт2",КонецДня(Дт1)+1);
	
    Возврат Запрос.Выполнить().Выгрузить();
	
КонецФункции

